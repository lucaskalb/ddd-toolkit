name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      skip_tests:
        description: 'Skip tests during release'
        required: false
        type: boolean
        default: false

jobs:
  manual-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Configure Maven settings
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        
    - name: Update version in pom.xml
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.version }} -DgenerateBackupPoms=false
      
    - name: Run tests
      if: ${{ !github.event.inputs.skip_tests }}
      run: mvn clean test
      
    - name: Deploy to Maven Central
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        mvn clean deploy -P release \
          ${{ github.event.inputs.skip_tests && '-DskipTests=true' || '' }} \
          --batch-mode \
          --no-transfer-progress
          
    - name: Create and push tag
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add pom.xml
        git commit -m "Release version ${{ github.event.inputs.version }}"
        git tag "v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: |
          ðŸš€ **Manual Release ${{ github.event.inputs.version }}**
          
          This release was created manually via GitHub Actions workflow dispatch.
          
          ## Maven Dependency
          ```xml
          <dependency>
              <groupId>dev.lucaskalb</groupId>
              <artifactId>ddd-toolkit</artifactId>
              <version>${{ github.event.inputs.version }}</version>
          </dependency>
          ```
          
          ## Gradle Dependency
          ```groovy
          implementation 'dev.lucaskalb:ddd-toolkit:${{ github.event.inputs.version }}'
          ```
        draft: false
        prerelease: false