name: Release to Maven Central

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Configure Maven settings
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update version in pom.xml
      run: mvn versions:set -DnewVersion=${{ steps.version.outputs.VERSION }} -DgenerateBackupPoms=false
      
    - name: Run tests
      run: mvn clean test
      
    - name: Deploy to Maven Central
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        mvn clean deploy -P release \
          -DskipTests=true \
          --batch-mode \
          --no-transfer-progress
          
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          Changes in this Release
          - Release version ${{ steps.version.outputs.VERSION }}
          
          ## Maven Dependency
          ```xml
          <dependency>
              <groupId>dev.lucaskalb</groupId>
              <artifactId>ddd-toolkit</artifactId>
              <version>${{ steps.version.outputs.VERSION }}</version>
          </dependency>
          ```
          
          ## Gradle Dependency
          ```groovy
          implementation 'dev.lucaskalb:ddd-toolkit:${{ steps.version.outputs.VERSION }}'
          ```
        draft: false
        prerelease: false